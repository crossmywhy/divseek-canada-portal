<?php
/**
 * @galaxy
 * Installation of the galaxy module
 */

/**
 * Implementation of hook_schema().
 *
 * @ingroup tripal_galaxy
 */
function tripal_galaxy_schema() {
  $schema = array();

  tripal_galaxy_add_galaxy_table($schema);
  tripal_galaxy_add_workflow_table($schema);
  tripal_galaxy_add_workflow_submission_table($schema);
  tripal_galaxy_add_custom_quota_table($schema);
  tripal_galaxy_add_expiration_files_table($schema);
  tripal_galaxy_add_site_wide_files_table($schema);

  return $schema;
}

/**
 * Adds the 'tripal_galaxy' table to Drupal schema.
 *
 * @ingroup tripal_galaxy
 */
function tripal_galaxy_add_galaxy_table(&$schema) {
  $schema['tripal_galaxy'] = array(
    'table' => 'tripal_galaxy',
    'fields' => array(
      'galaxy_id' => array(
        'type' => 'serial',
        'not NULL' => TRUE
      ),
      'url' => array(
        'type' => 'text',
        'not NULL' => TRUE
       ),
      'uid' => array(
        'type' => 'int',
        'not NULL' => TRUE
      ),
      'save_auth' => array(
        'type' => 'int',
        'size' => 'tiny',
        'default' => 1,
        'not NULL' => TRUE
      ),
      'username' => array(
        'type' => 'varchar',
        'length ' => 128
      ),
      'api_key' => array(
        'type' => 'varchar',
        'length ' => 1024
      ),
      'servername' => array(
        'type' => 'varchar',
      	'length ' => 1024
      ),
      'description' => array(
        'type' => 'text',
      'not NULL' => FALSE,
       ),
    ),
    'primary key' => array(
       0 => 'galaxy_id',
    ),
    'unique keys' => array(
      'tripal_galaxy_servername' => array('servername'),
    ),
  );
}

/**
 * Add workflow submission table, the table responsible for recording submitted
 * Workflow data
 * @param unknown $schema
 */
function tripal_galaxy_add_workflow_submission_table(&$schema){

  $schema['tripal_galaxy_workflow_submission'] = array(
    'table' => 'tripal_galaxy_workflow_submission',
    'fields' => array (
      'sid' => array(
        'type' => 'int',
        'not NULL' => TRUE
      ),
      'galaxy_workflow_id' => array(
        'type' => 'int',
        'not NULL' => TRUE
      ),
      'errors' => array(
        'type' => 'text',
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 50,
        'not NULL' => TRUE,
        'default' => 'Waiting',
      ),
      'submit_date' => array(
        'type' => 'int',
        'not NULL' => TRUE,
        'description' => 'UNIX integer submit time'
      ),
      'start_time' => array(
        'type' => 'int',
        'not NULL' => FALSE,
        'description' => 'UNIX integer start time'
      ),
      'end_time' => array(
        'type' => 'int',
        'not NULL' => FALSE,
        'description' => 'UNIX integer end time'
      ),
      'invocation_id' => array(
        'type' => 'varchar',
        'length' => 128,
        'description' => 'Galaxy provides an invocation ID that can be used ' .
          'to check the status of a submitted workflow.'
      )
    ),
    'indexes' => array(
      'sid' => array('sid'),
      'galaxy_workflow_id' => array('galaxy_workflow_id'),
    ),
    'unique' => array(
      'sid_uq1' => array('sid'),
    ),
  );
}

/**
 * Adds the 'tripal_galaxy_workflow' table to Drupal schema.
 */
function tripal_galaxy_add_workflow_table(&$schema){

  $schema['tripal_galaxy_workflow'] = array(
    'table' => 'tripal_galaxy_workflow',
    'fields' => array (
      'galaxy_workflow_id' => array(
        'type' => 'serial',
        'not NULL' => TRUE
      ),
      'nid' => array(
        'type' => 'int',
        'not NULL' => TRUE
      ),
      'galaxy_id' => array(
        'type' => 'int',
        'not NULL' => TRUE
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 1024,
        'default' => 'Active',
      ),
      'workflow_id' => array(
        'type' => 'varchar',
        'length' => 128,
        'not NULL' => TRUE,
        'description' => 'The ID of the workflow on the Galaxy server.'
      ),
      'workflow_uuid' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not NULL' => TRUE,
        'description' => 'Each Galaxy workflow has a unique UUID nad each time ' .
          'the workflow is changed the UUID changes. This way we can ensure that ' .
          'workflows are disabled if the UUID changes.'
      ),
      'workflow_name' => array(
        'type' => 'text',
        'not NULL'=> TRUE,
      ),
    ),
    'primary key' => array(
      0 => 'galaxy_workflow_id',
    ),
    'unique keys' => array(
      'tripal_galaxy_workflow_uq1' => array('galaxy_id', 'workflow_id', 'workflow_uuid'),
    ),
  );
}

/**
 * Adds the 'tripal_galaxy_custom_quota' table to Drupal schema.
 */
function tripal_galaxy_add_custom_quota_table(&$schema) {
  $schema['tripal_galaxy_custom_quota'] = array (
    'table' => 'tripal_galaxy_custom_quota',
    'fields' => array (
      'uid' => array(
        'type' => 'int',
        'size' => 'big',
        'not NULL' => TRUE,
      ),
      'custom_quota' => array(
        'type' => 'int',
        'size' => 'big',
        'not NULL' => TRUE,
      ),
      'custom_expiration' => array(
        'type' => 'int',
        'size' => 'big',
        'not NULL' => TRUE,
      ),
    ),
    'primary key' => array(
      0 => 'uid',
    ),
  );
  // TODO: missing indexes and unique constraints.
}
function tripal_galaxy_add_expiration_files_table(&$schema) {
  $schema['tripal_galaxy_expiration_files'] = array (
    'table' => 'tripal_galaxy_expiration_files',
    'fields' => array (
      'fid' => array(
        'type' => 'int',
        'not NULL' => TRUE
      ),
      'expiration_date' => array(
        'type' => 'int',
        'size' => 'big',
        'not NULL' => TRUE
      ),
    ),
    'primary key' => array(
      0 => 'fid'
    ),
  );
  // TODO: missing indexes and unique constraints.
}

function tripal_galaxy_add_site_wide_files_table(&$schema) {
  $schema['tripal_galaxy_site_files'] = array (
    'table' => 'tripal_galaxy_site_files',
    'fields' => array (
      'swfid' => array(
        'type' => 'serial',
        'not null' => TRUE
      ),
      'fid' => array(
        'type' => 'int',
      ),
      'url' => array(
        'type' => 'text',
      ),
      'filename' => array(
        'type' => 'varchar',
        'length' => 1024,
        'not null' => TRUE,
      ),
      'short_desc' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'filetype' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE
      ),
      'enabled' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'primary key' => array(
      0 => 'swfid'
    ),
    'unique keys' => array(
      'uq1' => array('url'),
      'uq2' => array('fid')
    ),
    'indexes' => array(
      'idx1' => array('filetype'),
    )
  );
}

/**
 * Implements hook_requirements().
 */
function tripal_galaxy_requirements($phase) {
  $requirements = array();
  if ($phase == 'install') {
    if (!module_exists('tripal_core') and !module_exists('tripal')) {
      $requirements ['tripal_galaxy'] = array(
        'title' => "tripal_galaxy",
        'value' => "ERROR: You must have Tripal v2 or v3 installed to use this module.",
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}


function tripal_galaxy_uninstall () {
  // Remove the two quota variables
  // Remove the db tables that this installed
  drupal_uninstall_schema('tripal_galaxy');
  db_drop_table('tripal_galaxy');
  db_drop_table('tripal_galaxy_workflow');
  db_drop_table('tripal_galaxy_workflow_submission');
  db_drop_table('tripal_galaxy_custom_quota');
  db_drop_table('tripal_galaxy_expiration_files');
}




/**
 * Adds support for file quotas.
 */
function tripal_galaxy_update_7100() {
  try {
    $schema = array();
    tripal_galaxy_add_custom_quota_table($schema);
    db_create_table('tripal_galaxy_custom_quota',$schema['tripal_galaxy_custom_quota']);
    tripal_galaxy_add_expiration_files_table($schema);
    db_create_table('tripal_galaxy_expiration_files',$schema['tripal_galaxy_expiration_files']);
  }
  catch (\PDOException $e) {
    $error = $e->getMessage();
    throw new DrupalUpdateException('Could not perform update: '. $error);
  }
}

/**
 * Adds support for site-wide files
 */
function tripal_galaxy_update_7101() {
  try {
    $schema = array();
    tripal_galaxy_add_site_wide_files_table($schema);
    db_create_table('tripal_galaxy_site_files',$schema['tripal_galaxy_site_files']);
  }
  catch (\PDOException $e) {
    $error = $e->getMessage();
    throw new DrupalUpdateException('Could not perform update: '. $error);
  }
}

/**
 * Changes the custom_quota field to a big int.
 */
function tripal_galaxy_update_7102() {
  try {
    db_change_field('tripal_galaxy_custom_quota', 'custom_quota', 'custom_quota',
      array(
        'type' => 'int',
        'size' => 'big',
        'not NULL' => TRUE,
      )
    );
  }
  catch (\PDOException $e) {
    $error = $e->getMessage();
    throw new DrupalUpdateException('Could not update the tripal_galaxy_custom_quota table: '. $error);
  }
}